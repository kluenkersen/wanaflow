{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport cleansing from \"./assets/steps/01-cleansing.json\";\nimport breathing from \"./assets/steps/02-breath.json\";\nimport quotes from \"./assets/steps/03-quotes.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      crystalOpacity = _useState4[0],\n      setCrystalOpacity = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      headerText = _useState8[0],\n      setHeaderText = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      quote = _useState10[0],\n      setQuote = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      breathingSteps = _useState12[0],\n      setBreathingSteps = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      quoteAutor = _useState14[0],\n      setQuoteAutor = _useState14[1];\n\n  function getRandomNumber(max) {\n    var min = 1;\n    var rand = parseInt(min + Math.random() * (max - min));\n    return rand;\n  }\n\n  function handleButtonPress() {\n    return _handleButtonPress.apply(this, arguments);\n  }\n\n  function _handleButtonPress() {\n    _handleButtonPress = _asyncToGenerator(function* () {\n      setQuote(undefined);\n      setQuoteAutor(undefined);\n      setHeaderText(undefined);\n      setBreathingSteps([]);\n      setStep(step + 1);\n      setCrystalOpacity(crystalOpacity + 0.1);\n      setIsLoading(true);\n      console.log(step);\n\n      if (step == 0) {\n        setQuote(cleansing[getRandomNumber(80)]);\n      }\n\n      if (step == 1) {\n        var breath = breathing[getRandomNumber(3)];\n        console.log(breath);\n        setHeaderText(Object.keys(breath));\n        setBreathingSteps(breath[Object.keys(breath)]);\n        console.log(breath[Object.keys(breath)]);\n      }\n\n      if (step == 2) {\n        var randomNumber = getRandomNumber(67);\n        var splitted = quotes[randomNumber].split('.');\n        setQuote(quotes[randomNumber].slice(0, quotes[randomNumber].length - splitted[splitted.length - 1].length));\n        setQuoteAutor(splitted[splitted.length - 1]);\n      }\n    });\n    return _handleButtonPress.apply(this, arguments);\n  }\n\n  ;\n  useEffect(function () {\n    var interval = null;\n\n    if (isLoading) {\n      interval = setInterval(function () {\n        setCrystalOpacity(crystalOpacity + 0.1);\n      }, 1500);\n      setTimeout(function () {\n        setIsLoading(false);\n      }, 5000);\n    }\n\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isLoading, crystalOpacity]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.viewText,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: headerText\n      }), _jsx(Text, {\n        style: styles.quote,\n        children: quote\n      }), breathingSteps.length > 0 && breathingSteps.map(function (item, index) {\n        return _jsxs(Text, {\n          style: styles.quote,\n          children: [index + 1, \". \", item]\n        });\n      }), _jsx(Text, {\n        style: styles.quoteAutor,\n        children: quoteAutor\n      })]\n    }), _jsxs(View, {\n      style: styles.viewIcon,\n      children: [_jsx(Image, {\n        style: {\n          position: 'relative',\n          width: '100%',\n          height: '100%',\n          resizeMode: 'contain',\n          opacity: crystalOpacity\n        },\n        source: require(\"./assets/icon.png\")\n      }), _jsx(Image, {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          resizeMode: 'contain'\n        },\n        source: require(\"./assets/icon_colorless.png\")\n      }), isLoading ? _jsx(ActivityIndicator, {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '80%'\n        },\n        size: \"small\",\n        color: \"#0000ff\"\n      }) : _jsx(View, {}), _jsx(TouchableOpacity, {\n        onPress: handleButtonPress,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Push me\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.viewBottom\n    })]\n  });\n}\nvar window = Dimensions.get('window');\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  viewText: {\n    flex: 1,\n    height: window.height * 0.45,\n    justifyContent: 'center',\n    marginRight: 15,\n    marginLeft: 15\n  },\n  quote: {\n    textAlign: 'center'\n  },\n  headerText: {\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  breathingText: {\n    textAlign: 'center'\n  },\n  quoteAutor: {\n    textAlign: 'center',\n    fontSize: 12,\n    marginTop: 5\n  },\n  viewIcon: {\n    height: window.height * 0.45,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  viewBottom: {\n    height: window.height * 0.1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: 'purple',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: -40\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["useEffect","useState","cleansing","breathing","quotes","App","step","setStep","crystalOpacity","setCrystalOpacity","isLoading","setIsLoading","headerText","setHeaderText","quote","setQuote","breathingSteps","setBreathingSteps","quoteAutor","setQuoteAutor","getRandomNumber","max","min","rand","parseInt","Math","random","handleButtonPress","undefined","console","log","breath","Object","keys","randomNumber","splitted","split","slice","length","interval","setInterval","setTimeout","clearInterval","styles","container","viewText","map","item","index","viewIcon","position","width","height","resizeMode","opacity","require","button","buttonText","viewBottom","window","Dimensions","get","StyleSheet","create","flex","flexDirection","justifyContent","marginRight","marginLeft","textAlign","fontWeight","breathingText","fontSize","marginTop","alignItems","backgroundColor","padding","borderRadius","color"],"sources":["/Users/stefan/src/tmp/wanaflow/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { Dimensions, StyleSheet, Text, View, Image, ActivityIndicator, TouchableOpacity } from 'react-native';\n\nimport cleansing from './assets/steps/01-cleansing.json';\nimport breathing from './assets/steps/02-breath.json';\nimport quotes from './assets/steps/03-quotes.json';\n\nexport default function App() {\n  const [step, setStep] = useState(0);\n  const [crystalOpacity, setCrystalOpacity] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [headerText, setHeaderText] = useState();\n  const [quote, setQuote] = useState();\n  const [breathingSteps, setBreathingSteps] = useState([]);\n  const [quoteAutor, setQuoteAutor] = useState();\n\n  function getRandomNumber(max) {\n    const min = 1;\n    const rand = parseInt(min + Math.random() * (max - min));\n    return rand;\n  }\n\n  async function handleButtonPress() {\n    setQuote(undefined);\n    setQuoteAutor(undefined);\n    setHeaderText(undefined);\n    setBreathingSteps([]);\n    setStep(step + 1);\n    setCrystalOpacity(crystalOpacity + 0.1);\n    setIsLoading(true);\n    console.log(step);\n    if (step == 0) {\n      setQuote(cleansing[getRandomNumber(80)]);\n    }\n    if (step == 1) {\n      const breath = breathing[getRandomNumber(3)]\n      console.log(breath);\n      setHeaderText(Object.keys(breath));\n      setBreathingSteps(breath[Object.keys(breath)]);\n      console.log(breath[Object.keys(breath)]);\n    }\n    if (step == 2) {\n      const randomNumber = getRandomNumber(67);\n      const splitted = quotes[randomNumber].split('.');\n      setQuote(quotes[randomNumber].slice(0, quotes[randomNumber].length - (splitted[splitted.length - 1]).length));\n      setQuoteAutor(splitted[splitted.length - 1]);\n    }\n\n  };\n\n  useEffect(() => {\n    let interval = null;\n    // set opacity\n    if (isLoading) {\n      interval = setInterval(() => {\n        setCrystalOpacity(crystalOpacity + 0.1);\n      }, 1500);\n      // set timer for loading step\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 5000);\n    }\n    return () => clearInterval(interval);\n  }, [isLoading, crystalOpacity])\n\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.viewText}>\n        <Text style={styles.headerText}>{headerText}</Text>\n        <Text style={styles.quote}>{quote}</Text>\n        {breathingSteps.length > 0 &&\n          breathingSteps.map((item, index) => (\n            <Text style={styles.quote}>{index + 1}. {item}</Text>\n          ))\n        }\n        \n        <Text style={styles.quoteAutor}>{quoteAutor}</Text>\n      </View>\n      <View style={styles.viewIcon}>\n\n        <Image style={{ position: 'relative', width: '100%', height: '100%', resizeMode: 'contain', opacity: crystalOpacity }} source={require('./assets/icon.png')} />\n        <Image style={{ position: 'absolute', width: '100%', height: '100%', resizeMode: 'contain' }} source={require('./assets/icon_colorless.png')} />\n        {isLoading ? (<ActivityIndicator style={{ position: 'absolute', width: '100%', height: '80%' }} size='small' color='#0000ff'></ActivityIndicator>) : (<View />)}\n\n        <TouchableOpacity onPress={handleButtonPress} style={styles.button}>\n          <Text style={styles.buttonText}>Push me</Text>\n        </TouchableOpacity>\n\n      </View>\n      <View style={styles.viewBottom}>\n      </View>\n    </View>\n  );\n}\n\nconst window = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n  },\n  viewText: {\n    flex: 1,\n    height: window.height * 0.45,\n    justifyContent: 'center',\n    marginRight: 15,\n    marginLeft: 15,\n  },\n  quote: {\n    textAlign: 'center',\n  },\n  headerText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  breathingText: {\n    textAlign: 'center',\n  },\n  quoteAutor: {\n    textAlign: 'center',\n    fontSize: 12,\n    marginTop: 5,\n  },\n  viewIcon: {\n    height: window.height * 0.45,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  viewBottom: {\n    height: window.height * 0.1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: 'purple',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: -40,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}